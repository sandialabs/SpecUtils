#ifndef SpecUtils_config_h
#define SpecUtils_config_h
/* SpecUtils: a library to parse, save, and manipulate gamma spectrum data files.
 
 Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC
 (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
 Government retains certain rights in this software.
 For questions contact William Johnson via email at wcjohns@sandia.gov, or
 alternative emails of interspec@sandia.gov.
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */


#cmakedefine01 PERFORM_DEVELOPER_CHECKS
#cmakedefine01 SpecUtils_ENABLE_D3_CHART
#cmakedefine01 SpecUtils_ENABLE_URI_SPECTRA
#cmakedefine01 SpecUtils_USE_WT_THREADPOOL
#cmakedefine01 SpecUtils_USING_NO_THREADING
#cmakedefine01 SpecUtils_D3_SUPPORT_FILE_STATIC
#cmakedefine01 SpecUtils_INJA_TEMPLATES
#cmakedefine01 SpecUtils_BUILD_FUZZING_TESTS

#cmakedefine01 SpecUtils_PYTHON_BINDINGS
#cmakedefine01 SpecUtils_JAVA_SWIG

#cmakedefine01 SpecUtils_USE_SIMD
#cmakedefine01 SpecUtils_ENABLE_EQUALITY_CHECKS

#cmakedefine01 SpecUtils_USE_FAST_FLOAT
#cmakedefine01 SpecUtils_USE_FROM_CHARS
#cmakedefine01 SpecUtils_USE_BOOST_SPIRIT
#cmakedefine01 SpecUtils_USE_STRTOD

#include <cmath>

#if( defined(_WIN32) && defined(_MSC_VER) )
#include <stdio.h>
#include <stdlib.h>
#include <float.h>
#define isnan(x) _isnan(x)
#define isinf(x) (!_finite(x))
#if( _MSC_VER <= 1700 )
#define snprintf _snprintf_s
#endif
#endif


#ifndef IsInf
#define IsInf(x) (std::isinf)(x)
#endif

#ifndef IsNan
#define IsNan(x) (std::isnan)(x)
#endif

#if(PERFORM_DEVELOPER_CHECKS)
//log_developer_error(...) is implemented in SpecFile.cpp, but
//  declared here so can be used everywhere.
//Error messages go to developer_errors.log in the cwd
void log_developer_error( const char *location, const char *error );
#endif

#endif // InterSpec_config_h
